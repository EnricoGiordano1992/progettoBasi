/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.35
 * Generated at: 2014-07-09 10:39:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import dbms.*;

public final class DiagnosiPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- DIAGNOSI PAGE -->\n");
      out.write("\n");
      out.write("<!-- Eseguo gli import necessari -->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
 
    // Genero un oggetto della classe DBMS per gestire l'interzione con la base di dati
    DBMS dbms = new DBMS();
    String medico;

    if (request.getParameter("user") != null)
	    medico = (String)request.getParameter("user");
    else
	    medico = "";


    String iAm = dbms.getMedico(medico); 

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("// Funzione che permette di aggiungere elementi al form (ESEMPIO 1)\n");
      out.write("var j = 1;\n");
      out.write("var old_j = 0;\n");
      out.write("var k = 0;\n");
      out.write("\n");
      out.write("var arrayString = new Array();\n");
      out.write("var arrayCheckConferma = new Array();\n");
      out.write("var arrayCheckContraddizione = new Array();\n");
      out.write("var arrayIntensita = new Array();\n");
      out.write("\n");
      out.write("function aggiornaString (stringa, pos) {\n");
      out.write("\n");
      out.write("\tarrayString[pos] = \"value = '\" + stringa.value + \"'\";\n");
      out.write("}\n");
      out.write("\n");
      out.write("function aggiornaCheckConferma(pos) {\n");
      out.write("\n");
      out.write("\tarrayCheckConferma[pos] = \"checked\";\n");
      out.write("\tarrayCheckContraddizione[pos] = \"\";\n");
      out.write("}\n");
      out.write("\n");
      out.write("function aggiornaCheckContraddizione(pos) {\n");
      out.write("\n");
      out.write("\tarrayCheckContraddizione[pos] = \"checked\";\n");
      out.write("\tarrayCheckConferma[pos] = \"\";\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function deletePos(pos) {\n");
      out.write("\n");
      out.write("\tarrayCheckContraddizione[pos] = null;\n");
      out.write("\tarrayCheckConferma[pos] = null;\n");
      out.write("\tarrayString[pos] = null;\n");
      out.write("\tarrayIntensita[pos] = null;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function aggiornaIntensita(stringa, pos) {\n");
      out.write("\t\n");
      out.write("\tarrayIntensita[pos] = \"value = '\" + stringa.value + \"'\";;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function AggiungiRiga(){\n");
      out.write("\tvar numero_righe = j++;\n");
      out.write("\tvar box = document.getElementById('box_righe');\n");
      out.write("\tif(isNaN(numero_righe)==true){\n");
      out.write("\t\tbox.innerHTML='';\n");
      out.write("\t}else{\n");
      out.write("\t    var righe = \"\";\n");
      out.write("\t\t// Inserisco una riga ad ogni ciclo\n");
      out.write("\t\tfor(i=1; i<=numero_righe; i++){\n");
      out.write("\t\t\tk=i+1;\n");
      out.write("\n");
      out.write("\t\t\trighe = righe+\"Sintomo \"+(k) +\" : \" +\"<input type='text' \" + arrayString[k] + \" name='sintomo\"+k+\"' onkeyup='aggiornaString(this, \" + k + \")'  />\" +\n");
      out.write("\t\t\t\" <input type='radio' name='tipo\" + k + \"' value='conferma' onclick='aggiornaCheckConferma(\"+ k + \")' \" + arrayCheckConferma[k] + \">Conferma \"+\n");
      out.write("\t\t\t\"<input type='radio' name='tipo\" + k + \"' value='contraddizione' onclick='aggiornaCheckContraddizione(\"+ k + \")' \" + arrayCheckContraddizione[k] +\">Contraddizione <br/>\" +\n");
      out.write("\t\t\t\"Intensità \"+ k + \": <input type='text' \" + arrayIntensita[k] + \" name=intensita\"+k+\" onkeyup='aggiornaIntensita(this, \" + k + \")'><br>\";\n");
      out.write("\n");
      out.write("\t\t}\n");
      out.write("\t\t// Aggiorno il contenuto del box che conterrà gli elementi aggiunti\n");
      out.write("\t\tbox.innerHTML=righe;\n");
      out.write("\t\t\n");
      out.write("\t\told_j = j;\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("function EliminaRiga(riga){\n");
      out.write("\tvar numero_righe = --j;\n");
      out.write("\tvar box = document.getElementById('box_righe');\n");
      out.write("\tif(isNaN(numero_righe)==true){\n");
      out.write("\t\tbox.innerHTML='';\n");
      out.write("\t}else{\n");
      out.write("\t    var righe = \"\";\n");
      out.write("\t\t// Inserisco una riga ad ogni ciclo\n");
      out.write("\t\tfor(i=1; i<=numero_righe; i++){\n");
      out.write("\t\t\tk=i+1;\n");
      out.write("\t\t\tif(k != riga){\n");
      out.write("\t\t\t\trighe = righe+\"Sintomo \"+(k) +\" : \" +\"<input type='text' \" + arrayString[k] + \" name='sintomo\"+k+\"' onkeyup='aggiornaString(this, \" + k + \")'  />\" +\n");
      out.write("\t\t\t\t\" <input type='radio' name='tipo\" + k + \"' value='conferma' onclick='aggiornaCheckConferma(\"+ k + \")' \" + arrayCheckConferma[k] + \">Conferma \"+\n");
      out.write("\t\t\t\t\"<input type='radio' name='tipo\" + k + \"' value='contraddizione' onclick='aggiornaCheckContraddizione(\"+ k + \")' \" + arrayCheckContraddizione[k] +\">Contraddizione <br/>\" +\n");
      out.write("\t\t\t\t\"Intensità \"+ k + \": <input type='text' \" + arrayIntensita[k] + \" name=intensita\"+k+\" onkeyup='aggiornaIntensita(this, \" + k + \")'><br>\";\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\telse\n");
      out.write("\t\t\t\tdeletePos(k);\n");
      out.write("\t\t}\n");
      out.write("\t\t// Aggiorno il contenuto del box che conterrà gli elementi aggiunti\n");
      out.write("\t\tbox.innerHTML=righe;\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<title>DiagnosiPage</title>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t<h2>\n");
      out.write("\t\tBenvenuto\n");
      out.write("\t\t");
      out.print( iAm );
      out.write("\n");
      out.write("\t</h2>\n");
      out.write("\n");
      out.write("\t<h3>inserire la diagnosi</h3>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<form name=\"diagnosi\" action=\"?\" method=\"get\">\n");
      out.write("\t\tPaziente: <input type=text name=codsan> \n");
      out.write("\t\t<br> \n");
      out.write("\t\t<label>Data:\n");
      out.write("\t\t\t<input type=\"date\" name=\"mydatetime\">\n");
      out.write("\t\t</label> \n");
      out.write("\t\t<br> \n");
      out.write("\t\tICD10: <input type=text name=ICD10> \n");
      out.write("\t\t<br>\n");
      out.write("\t\tPatologia: <input type=text name=patologia> \n");
      out.write("\t\t<br> \n");
      out.write("\t\tSintomo 1: <input type=\"text\" name=\"righe\" /> \n");
      out.write("\t\t<input type=\"radio\" name=\"tipo\" value=\"conferma\">Conferma \n");
      out.write("\t\t<input type=\"radio\" name=\"tipo\"\tvalue=\"contraddizione\">Contraddizione \n");
      out.write("\t\t<br>\n");
      out.write("\t\tIntensità 1: <input type=\"text\" name=intensita> \n");
      out.write("\t\t<br> \n");
      out.write("\t\t<span id='box_righe'>\n");
      out.write("\t\t\t<!-- Box che conterrà le righe aggiunte. Inizialmente vuoto! -->\n");
      out.write("\t\t</span> \n");
      out.write("\t\t<input type=button onclick=\"AggiungiRiga()\" value=\"aggiungi sintomo\" />\n");
      out.write("\t\t<br> \n");
      out.write("\t\t<input type=button onclick=\"EliminaRiga(riga.value)\" value=\"elimina sintomo\" /> \n");
      out.write("\t\tsintomo: <input type=text name=riga>\n");
      out.write("\n");
      out.write("\t\t<br> <input type=submit>\n");
      out.write("\t</form>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
